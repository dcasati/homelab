apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: iot-stack
data:
  telegraf.conf: |
    [global_tags]
      environment = "homelab"

    [agent]
      interval = "10s"
      round_interval = true
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_interval = "10s"
      flush_jitter = "0s"
      precision = ""
      hostname = ""
      omit_hostname = false

    # MQTT Consumer Input Plugin
    [[inputs.mqtt_consumer]]
      servers = ["tcp://mosquitto-service.iot-stack:1883"]
      topics = [
        "sensors/+/temperature",
        "sensors/+/humidity",
        "sensors/+/pressure",
        "sensors/#",
        "home/+/+",
        "mxchip/telemetry"
      ]
      data_format = "json"
      json_string_fields = ["device_id", "location", "model", "id", "channel"]
      tag_keys = ["model", "topic", "id"]

    # Rename model tag to device tag
    [[processors.rename]]
      [[processors.rename.replace]]
        tag = "model"
        dest = "device"

    # Add location tag based on device name
    [[processors.enum]]
      namepass = ["mqtt_consumer"]
      [[processors.enum.mapping]]
        tag = "device"
        dest = "location"
        [processors.enum.mapping.value_mappings]
          "Acurite-5n1" = "outdoor"
          "Acurite-Tower" = "indoor"
          "Ambientweather-F007TH" = "indoor"
          "garage-1" = "garage"
          "basement-001" = "basement"
          "mxchip" = "indoor"

    # Add wind direction cardinal tag using starlark
    [[processors.starlark]]
      namepass = ["mqtt_consumer"]
      script = "/etc/telegraf/wind_direction.star"

    # InfluxDB Output Plugin
    [[outputs.influxdb]]
      urls = ["http://influxdb-service.iot-stack:8086"]
      database = "iot"
      username = "iot_user"
      password = "iot_password"
      retention_policy = ""
      write_consistency = "any"
      timeout = "5s"
---
kind: ConfigMap
metadata:
  name: wind-direction-script
  namespace: iot-stack
data:
  wind_direction.star: |
    def apply(metric):
        deg = metric.fields.get("wind_dir_deg")
        if deg is None:
            return metric

        directions = [
            "N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE",
            "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW"
        ]

        index = int((deg + 11.25) % 360 / 22.5)
        metric.tags["wind_dir_cardinal"] = directions[index]
        return metric
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: iot-stack
  labels:
    app: telegraf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - name: telegraf
        image: telegraf:1.28
        volumeMounts:
        - name: telegraf-config
          mountPath: /etc/telegraf/telegraf.conf
          subPath: telegraf.conf
        - name: wind-direction-script
          mountPath: /etc/telegraf/wind_direction.star
          subPath: wind_direction.star
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: telegraf-config
        configMap:
          name: telegraf-config
      - name: wind-direction-script
        configMap:
          name: wind-direction-script

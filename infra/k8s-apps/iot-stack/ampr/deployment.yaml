apiVersion: apps/v1
kind: Deployment
metadata:
  name: ampr
  namespace: iot-stack
  labels: { app: ampr }
spec:
  replicas: 1
  selector:
    matchLabels: { app: ampr }
  template:
    metadata:
      labels: { app: ampr }
    spec:
      containers:
        - name: ampr
          image: ghcr.io/dcasati/ampr:sha-01ecbc7
          ports:
            - containerPort: 51820
              hostPort: 51820         # <â€” expose on node without hostNetwork
              name: wireguard
              protocol: UDP
          securityContext:
            # Try to avoid full privileged: WireGuard typically needs NET_ADMIN + /dev/net/tun
            privileged: false
            capabilities:
              add: ["NET_ADMIN"]
          env:
            - name: WG_CONFIG_FILE
              value: "/etc/wireguard/wg0.conf"
          volumeMounts:
            - name: ampr-wg-config
              mountPath: /etc/wireguard-ro
              readOnly: true
            - name: wireguard-config
              mountPath: /etc/wireguard
            - name: dev-net-tun
              mountPath: /dev/net/tun
          resources:
            requests: { cpu: "50m", memory: "64Mi" }
            limits:   { cpu: "100m", memory: "128Mi" }
      initContainers:
        - name: setup-wg-config
          image: ghcr.io/dcasati/ampr:sha-01ecbc7
          command: ["/bin/sh","-c"]
          args:
            - cp /etc/wireguard-ro/wg0.conf /etc/wireguard/wg0.conf && chmod 600 /etc/wireguard/wg0.conf
          volumeMounts:
            - name: ampr-wg-config
              mountPath: /etc/wireguard-ro
              readOnly: true
            - name: wireguard-config
              mountPath: /etc/wireguard
      volumes:
        - name: ampr-wg-config
          secret:
            secretName: ampr-wg-secret
            defaultMode: 0600
        - name: wireguard-config
          emptyDir: {}
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
